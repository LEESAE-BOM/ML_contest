{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"patient_voting","provenance":[{"file_id":"1dp6IKY3q3j_O3KvQEGEXFeEx9L9s0k9V","timestamp":1637991961043}],"collapsed_sections":[],"mount_file_id":"1yPJEnN1wXzIumLkPpH31uirOYPEphMnK","authorship_tag":"ABX9TyMoymq1SHGb3xiVDbiJPz8b"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"nbhj2X0tXv4J"},"source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","sns.set_palette('husl')\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import torch\n","\n","from sklearn import metrics\n","from sklearn.metrics import accuracy_score\n","from sklearn.ensemble import VotingClassifier\n","from sklearn.ensemble import BaggingClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.svm import SVC"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G7wWkZ-pYA7G","executionInfo":{"status":"ok","timestamp":1637996176674,"user_tz":-540,"elapsed":827,"user":{"displayName":"이새봄","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07156101020401356864"}},"outputId":"8dc2c3b7-be91-4c14-83da-699966f8dbaf"},"source":["device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","\n","datapath='/content/drive/MyDrive/Colab Notebooks/dataset/patient'\n","data = pd.read_csv(datapath+'/train.csv',error_bad_lines=False)\n","test= pd.read_csv(datapath+'/test.csv')\n","\n","test_X=test.drop(['id'],axis=1)\n","test_Y=test['id']\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py:2718: DtypeWarning: Columns (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15) have mixed types.Specify dtype option on import or set low_memory=False.\n","  interactivity=interactivity, compiler=compiler, result=result)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kP1d88UUYEHv","executionInfo":{"status":"ok","timestamp":1637996177553,"user_tz":-540,"elapsed":880,"user":{"displayName":"이새봄","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07156101020401356864"}},"outputId":"30c05d73-66cf-45c9-8ecc-56ef1cc77f2d"},"source":["data = data.apply(pd.to_numeric, errors='coerce')\n","data.info()\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 300000 entries, 0 to 299999\n","Data columns (total 16 columns):\n"," #   Column                Non-Null Count   Dtype  \n","---  ------                --------------   -----  \n"," 0   age                   299999 non-null  float64\n"," 1   afib                  299999 non-null  float64\n"," 2   chf                   299999 non-null  float64\n"," 3   copd                  299999 non-null  float64\n"," 4   diabetes              299999 non-null  float64\n"," 5   htn                   299999 non-null  float64\n"," 6   spo2                  299999 non-null  float64\n"," 7   avg_spo2              299999 non-null  float64\n"," 8   heartrate             299999 non-null  float64\n"," 9   avg_heartrate         299999 non-null  float64\n"," 10  bloodpressuresys      299999 non-null  float64\n"," 11  avg_bloodpressuresys  299999 non-null  float64\n"," 12  bloodpressuredia      299999 non-null  float64\n"," 13  avg_bloodpressuredia  299999 non-null  float64\n"," 14  total_alert           299999 non-null  float64\n"," 15  intervention          299999 non-null  float64\n","dtypes: float64(16)\n","memory usage: 36.6 MB\n"]}]},{"cell_type":"code","metadata":{"id":"Drl2hNFCvPeU"},"source":["data=data.dropna()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nUocNtGfYaKt"},"source":["X=data.drop(['intervention'],axis=1)\n","y=data['intervention']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AzO7CRlCaGpE","executionInfo":{"status":"ok","timestamp":1637996177554,"user_tz":-540,"elapsed":4,"user":{"displayName":"이새봄","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07156101020401356864"}},"outputId":"eda18f9e-bc1f-49b2-c17b-2c443d56b238"},"source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=5)\n","\n","print(X_train.shape)\n","print(y_train.shape)\n","print(X_test.shape)\n","print(y_test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(269999, 15)\n","(269999,)\n","(30000, 15)\n","(30000,)\n"]}]},{"cell_type":"code","metadata":{"id":"p_oydYXiOoOD"},"source":["voting_clf = BaggingClassifier(DecisionTreeClassifier(),n_estimators=500,max_samples=100,\n","                               bootstrap=True,n_jobs=-1)\n","voting_clf.fit(X_train, y_train)\n","Y_pred = voting_model.predict(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"naYCQdoqonSK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637996725151,"user_tz":-540,"elapsed":536,"user":{"displayName":"이새봄","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07156101020401356864"}},"outputId":"797a2e9f-9137-4b49-f476-f3f24fcc9033"},"source":["print(\"voting accuracy_score: {}\".format( accuracy_score(y_test, Y_pred)))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["voting accuracy_score: 0.9969333333333333\n"]}]},{"cell_type":"code","metadata":{"id":"Qqi2GzdKKp76"},"source":["ra_pred=voting_model.predict(test_X)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SU-IIYstxVfg"},"source":["ra_pred=ra_pred.astype(int)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"H9Rkc4NqeYB9"},"source":["submission = pd.DataFrame({\n","        \"id\": test[\"id\"],\n","        \"intervention\": ra_pred\n","        })\n","submission.to_csv('voting_sub.csv',index=False)\n"],"execution_count":null,"outputs":[]}]}